basePath: /
definitions:
  controller.addActorInput:
    properties:
      Birthday:
        type: string
      gender:
        type: string
      name:
        type: string
    type: object
  controller.addActorToMovieInput:
    properties:
      actor_id:
        type: integer
      movie_id:
        type: integer
    type: object
  controller.changeActorFieldInput:
    properties:
      actor_id:
        type: integer
      field:
        type: string
      new_value:
        type: string
    type: object
  controller.changeFieldInput:
    properties:
      field:
        type: string
      movie_id:
        type: integer
      new_value:
        type: string
    type: object
  controller.createMovieInput:
    properties:
      actors:
        items:
          type: integer
        type: array
      date:
        type: string
      description:
        type: string
      name:
        type: string
      rate:
        type: integer
    type: object
  controller.createUserInput:
    properties:
      name:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
  controller.deleteActorInput:
    properties:
      actor_id:
        type: integer
    type: object
  controller.deleteFieldInput:
    properties:
      actor_id:
        type: integer
      field:
        type: string
      movie_id:
        type: integer
    type: object
  controller.deleteMovieInput:
    properties:
      movie_id:
        type: integer
    type: object
  controller.getAllMoviesInput:
    properties:
      sort_by:
        type: string
    type: object
  controller.migrateForceInput:
    properties:
      version:
        type: integer
    type: object
  controller.migrateOutput:
    properties:
      dirty:
        type: boolean
      version:
        type: integer
    type: object
  controller.outputWithId:
    properties:
      id:
        type: integer
      message:
        type: string
    type: object
  controller.outputWithMessage:
    properties:
      message:
        type: string
    type: object
  controller.searchMovieInput:
    properties:
      actor_pattern:
        type: string
      movie_pattern:
        type: string
    type: object
  models.Actor:
    properties:
      Birthday:
        type: string
      gender:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
  models.ActorWithMovies:
    properties:
      actor_birthday:
        type: string
      actor_gender:
        type: string
      actor_id:
        type: integer
      actor_name:
        type: string
      movies:
        items:
          $ref: '#/definitions/models.Movie'
        type: array
    type: object
  models.Movie:
    properties:
      date:
        type: string
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      rate:
        type: integer
    type: object
  models.MovieWithActors:
    properties:
      actors:
        items:
          $ref: '#/definitions/models.Actor'
        type: array
      movie_date:
        type: string
      movie_description:
        type: string
      movie_id:
        type: integer
      movie_name:
        type: string
      movie_rate:
        type: integer
    type: object
host: localhost:3000
info:
  contact: {}
  title: Filmoteka Application API
paths:
  /actor-list:
    get:
      consumes:
      - application/json
      description: get all actors
      operationId: get-all-actors
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ActorWithMovies'
            type: array
        "500":
          description: Internal Server Error
          schema:
            type: string
        default:
          description: error
          schema:
            type: string
      summary: Get All Actors
      tags:
      - actors
  /add-actor:
    post:
      consumes:
      - application/json
      description: create actor
      operationId: add-actor
      parameters:
      - description: actor data
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/controller.addActorInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Create Actor
      tags:
      - actors
  /add-actor-to-movie:
    post:
      consumes:
      - application/json
      description: add actor to the movie by actor_id and movie_id
      operationId: add-actor-to-movie
      parameters:
      - description: input data
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/controller.addActorToMovieInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.outputWithMessage'
        "400":
          description: Bad request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Add actor to the movie
      tags:
      - movies
  /add-movie:
    post:
      consumes:
      - application/json
      description: create movie
      operationId: add-movie
      parameters:
      - description: movie data
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/controller.createMovieInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Create Movie
      tags:
      - movies
  /change-actor-field:
    put:
      consumes:
      - application/json
      description: chanage actor field
      operationId: change-actor-field
      parameters:
      - description: actor_id field new_value
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/controller.changeActorFieldInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.outputWithMessage'
        "400":
          description: Bad request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Change Actor Field
      tags:
      - actors
  /change-movie-field:
    put:
      consumes:
      - application/json
      description: chanage movie field
      operationId: change-movie-field
      parameters:
      - description: actor_id
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/controller.changeFieldInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.outputWithMessage'
        "400":
          description: Bad request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Change Movie Field
      tags:
      - movies
  /delete-actor:
    delete:
      consumes:
      - application/json
      description: delete actor by id
      operationId: delete-actor
      parameters:
      - description: actor_id
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/controller.deleteActorInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.outputWithMessage'
        "400":
          description: Bad request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Delete Actor
      tags:
      - actors
  /delete-movie:
    delete:
      consumes:
      - application/json
      description: delete movie by id
      operationId: delete-movie
      parameters:
      - description: movie_id
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/controller.deleteMovieInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.outputWithMessage'
        "400":
          description: Bad request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Delete Movie
      tags:
      - movies
  /delete-movie-field:
    delete:
      consumes:
      - application/json
      description: delete movie field by field and movie_id
      operationId: delete-movie-field
      parameters:
      - description: movie_id field
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/controller.deleteFieldInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.outputWithMessage'
        "400":
          description: Bad request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Delete Actor
      tags:
      - movies
  /migrate-down:
    post:
      description: Apply to Migrate Down
      operationId: migrate-down
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.migrateOutput'
        "400":
          description: Bad request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Migrate Down
      tags:
      - migrations
  /migrate-force:
    post:
      consumes:
      - application/json
      description: Apply to Migrate Force
      operationId: migrate-force
      parameters:
      - description: version param
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/controller.migrateForceInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.migrateOutput'
        "400":
          description: Bad request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Migrate Force
      tags:
      - migrations
  /migrate-up:
    post:
      description: Apply to Migrate Up
      operationId: migrate-up
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.migrateOutput'
        "400":
          description: Bad request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Migrate Up
      tags:
      - migrations
  /movie-list:
    post:
      consumes:
      - application/json
      description: Return All Movies
      operationId: movie-list
      parameters:
      - description: sort_by param
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/controller.getAllMoviesInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.MovieWithActors'
            type: array
        "400":
          description: Bad request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get All Movies
      tags:
      - movies
  /search-movies:
    post:
      consumes:
      - application/json
      description: Return movies containing movie and actor patterns
      operationId: search-movies
      parameters:
      - description: movie_pattern and actor_pattern
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/controller.searchMovieInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.MovieWithActors'
            type: array
        "400":
          description: Bad request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Search Movie by movie and actor patterns
      tags:
      - movies
  /sign-in:
    post:
      consumes:
      - application/json
      description: login
      operationId: login
      parameters:
      - description: credentials
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/controller.createUserInput'
      produces:
      - application/json
      responses:
        "200":
          description: token
          schema:
            type: string
        "400":
          description: Bad request
          schema:
            type: string
        "500":
          description: Internal error
          schema:
            type: string
        default:
          description: error
          schema:
            type: string
      summary: SignIn
      tags:
      - auth
  /sign-up:
    post:
      consumes:
      - application/json
      description: create account
      operationId: create-account
      parameters:
      - description: name username password
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/controller.createUserInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controller.outputWithId'
        "400":
          description: Bad Request
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: SignUp
      tags:
      - auth
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
